---
import { LanguageSelect } from "./languageSelect.tsx";
import { NAVBAR, NAVBAR_HEADER_MAP } from "../config";
import { getLanguageFromURL } from "../languages";

export type Props = {
  currentPage: string;
};

const { currentPage } = Astro.props;

const currentPageMatch = currentPage.slice(1, currentPage.length);
const langCode = getLanguageFromURL(currentPage);
const finnishNavbar = NAVBAR["fi"];
const nativeNavbar = NAVBAR[langCode];
let navbar: Record<
  string,
  { text: string; link: string; isTranslated?: boolean }[]
> = finnishNavbar;
if (langCode !== "fi") {
  navbar = Object.fromEntries(
    Object.entries(finnishNavbar).map(([header, items]) => {
      // Set header to translated one if it exists
      const innerHeader = NAVBAR_HEADER_MAP[langCode];
      const nativeHeader =
        innerHeader[header as keyof typeof innerHeader] ?? header;

      const nativeItems = items.map((item) => {
        const match = Object.values(nativeNavbar)
          .flat()
          .find(
            ({ link: nativeLink }) =>
              // trailing slash + language code
              nativeLink.slice(langCode.length + 1) === item.link.slice(3),
          );
        return {
          text: match?.text ?? item.text,
          link: match?.link ?? item.link,
          isTranslated: !!match,
        };
      });

      return [nativeHeader, nativeItems];
    }),
  );
}
---

<header
  class="flex flex-1 items-center justify-between gap-8 bg-u+green px-[5.625rem]"
>
  {
    Object.entries(navbar).map(([header, children]) => (
      <>
        <h1 class="font-bold text-white">{header}</h1>
        <nav class="hidden items-center justify-center md:flex">
          <ul class="flex">
            {children.map((child) => {
              const url = Astro.site?.pathname + child.link;
              const isActive = currentPageMatch === child.link;
              return (
                <li>
                  <a
                    href={url}
                    aria-current={isActive ? "page" : false}
                    class:list={[
                      "block p-4 text-lg text-white transition-colors hover:bg-u+green-darker",
                      isActive ? "bg-u+green-darker font-medium" : "bg-u+green",
                    ]}
                  >
                    <span>{child.text}</span>
                  </a>
                </li>
              );
            })}
          </ul>
        </nav>
      </>
    ))
  }
  <LanguageSelect language={langCode} client:load />
</header>
